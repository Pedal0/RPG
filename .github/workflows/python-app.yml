name: Python CI/CD Pipeline

on:
  push:
    branches: [ "dev" ]

permissions:
  contents: write  # Allows GitHub Actions to push to branches

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: pytest
      - name: Check if tests passed
        id: tests
        run: echo "status=$?" >> $GITHUB_ENV

  deploy:
    needs: build-and-test
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Merge to master if tests pass
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git checkout master
          git merge dev
          git push origin master

  create-defective-branch:
    needs: build-and-test
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Create and push a branch with defective code
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b defective-branch
          git push origin defective-branch
